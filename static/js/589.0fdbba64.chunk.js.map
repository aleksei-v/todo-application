{"version":3,"file":"static/js/589.0fdbba64.chunk.js","mappings":"mPAKaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,yFAOVE,EAAYF,EAAAA,GAAAA,EAAH,wC,6BCHhBG,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACd,SAAC,KAAD,CACIA,KAAMA,EACNC,OAAQ,SAAAC,GAAQ,OAAI,SAACJ,EAAD,UAAYI,GAAhB,GAHN,EAMZC,EAASC,EAAAA,KAAaC,MAAM,CAC9BC,MAAOF,EAAAA,KAAaE,QAAQC,WAC5BC,SAAUJ,EAAAA,KAAaK,IAAI,GAAGC,IAAI,IAAIH,aAGpCI,EAAgB,CAClBL,MAAO,GACPE,SAAU,IAyCd,EAtCkB,WAEd,OAA+BI,EAAAA,EAAAA,KAAvBC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QACbC,GAAWC,EAAAA,EAAAA,MAMjB,OACI,+BACA,UAACC,EAAA,EAAD,CAAKC,EAAG,EAAR,WACI,uCAEA,SAAC,KAAD,CAAQP,cAAeA,EAAeQ,iBAAkBhB,EAAQiB,SAVnD,SAAC,EAAD,GAAyC,IAAtCd,EAAqC,EAArCA,MAAOE,EAA8B,EAA9BA,SAAca,EAAgB,EAAhBA,UACzCN,GAASO,EAAAA,EAAAA,IAAM,CAAEhB,MAAAA,EAAOE,SAAAA,KACxBa,GACH,EAOO,UACI,UAAC1B,EAAD,YACI,2CAEI,SAAC,KAAD,CAAO4B,KAAK,QAAQvB,KAAK,WACzB,SAACD,EAAD,CAAWC,KAAK,cAGpB,8CAEI,SAAC,KAAD,CAAOuB,KAAK,WAAWvB,KAAK,cAC5B,SAACD,EAAD,CAAWC,KAAK,iBAEpB,mBAAQuB,KAAK,SAAb,0BAIJT,GAAWD,IAAa,SAACW,EAAA,EAAD,QAKvC,C","sources":["pages/LoginPage/LoginPage.styled.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import { Form } from 'formik';\nimport styled from 'styled-components';\n\n\n\nexport const StyledForm = styled(Form)`\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n`\n\n\nexport const ErrorText = styled.p`\n    color: red\n`;","import { Formik, Field, ErrorMessage } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { Box } from 'theme/Box';\nimport { login } from 'redux/auth/operations';\nimport * as yup from 'yup';\nimport { ErrorText, StyledForm } from './LoginPage.styled';\nimport AuthLoader from \"components/Loaders/AuthLoader\";\nimport { useAuth } from 'hooks/useAuth';\n\nconst FormError = ({ name }) => (\n    <ErrorMessage\n        name={name}\n        render={messaege => <ErrorText>{messaege}</ErrorText>}\n    />);\n\nconst schema = yup.object().shape({\n    email: yup.string().email().required(),\n    password: yup.string().min(6).max(16).required()\n})\n\nconst initialValues = {\n    email: '',\n    password: '',\n};\n    \nconst LoginPage = () => {\n\n    const { isLoading, isError } = useAuth();\n    const dispatch = useDispatch()\n    const handleSubmit = ({ email, password }, { resetForm }) => {\n        dispatch(login({ email, password }))\n        resetForm()\n    };\n\n    return (\n        <>\n        <Box p={5}>\n            <h2>LoginForm</h2>\n            \n            <Formik initialValues={initialValues} validationSchema={schema} onSubmit={handleSubmit}>\n                <StyledForm>\n                    <label>\n                        Your login\n                        <Field type=\"email\" name=\"email\" />\n                        <FormError name='email' />\n                    </label>\n\n                    <label>\n                        Your password\n                        <Field type=\"password\" name=\"password\" />\n                        <FormError name='password' />\n                    </label>\n                    <button type=\"submit\">Log in</button>\n                </StyledForm>\n                \n            </Formik>\n              {!isError && isLoading && <AuthLoader />}\n        </Box>\n         \n            </>\n    )\n};\n\nexport default LoginPage"],"names":["StyledForm","styled","Form","ErrorText","FormError","name","render","messaege","schema","yup","shape","email","required","password","min","max","initialValues","useAuth","isLoading","isError","dispatch","useDispatch","Box","p","validationSchema","onSubmit","resetForm","login","type","AuthLoader"],"sourceRoot":""}